// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// createTransitiveSequences
size_t createTransitiveSequences(DataFrame df_dbMart, size_t numOfPatients, std::string& outputDir, std::string& outputFilePrefix, int numOfThreads);
RcppExport SEXP _tSPMPlusR_createTransitiveSequences(SEXP df_dbMartSEXP, SEXP numOfPatientsSEXP, SEXP outputDirSEXP, SEXP outputFilePrefixSEXP, SEXP numOfThreadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df_dbMart(df_dbMartSEXP);
    Rcpp::traits::input_parameter< size_t >::type numOfPatients(numOfPatientsSEXP);
    Rcpp::traits::input_parameter< std::string& >::type outputDir(outputDirSEXP);
    Rcpp::traits::input_parameter< std::string& >::type outputFilePrefix(outputFilePrefixSEXP);
    Rcpp::traits::input_parameter< int >::type numOfThreads(numOfThreadsSEXP);
    rcpp_result_gen = Rcpp::wrap(createTransitiveSequences(df_dbMart, numOfPatients, outputDir, outputFilePrefix, numOfThreads));
    return rcpp_result_gen;
END_RCPP
}
// tSPMPlus
DataFrame tSPMPlus(DataFrame& df_dbMart, std::string outputDir, std::string outputFilePrefix, int numOfThreads, bool removeSparseSequences, double sparsityValue, bool createTemporalBuckets, bool removeSparseTemporalBuckets, int patIdLength, bool addDuration, bool durationInWeeks, bool durationInMonths);
RcppExport SEXP _tSPMPlusR_tSPMPlus(SEXP df_dbMartSEXP, SEXP outputDirSEXP, SEXP outputFilePrefixSEXP, SEXP numOfThreadsSEXP, SEXP removeSparseSequencesSEXP, SEXP sparsityValueSEXP, SEXP createTemporalBucketsSEXP, SEXP removeSparseTemporalBucketsSEXP, SEXP patIdLengthSEXP, SEXP addDurationSEXP, SEXP durationInWeeksSEXP, SEXP durationInMonthsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame& >::type df_dbMart(df_dbMartSEXP);
    Rcpp::traits::input_parameter< std::string >::type outputDir(outputDirSEXP);
    Rcpp::traits::input_parameter< std::string >::type outputFilePrefix(outputFilePrefixSEXP);
    Rcpp::traits::input_parameter< int >::type numOfThreads(numOfThreadsSEXP);
    Rcpp::traits::input_parameter< bool >::type removeSparseSequences(removeSparseSequencesSEXP);
    Rcpp::traits::input_parameter< double >::type sparsityValue(sparsityValueSEXP);
    Rcpp::traits::input_parameter< bool >::type createTemporalBuckets(createTemporalBucketsSEXP);
    Rcpp::traits::input_parameter< bool >::type removeSparseTemporalBuckets(removeSparseTemporalBucketsSEXP);
    Rcpp::traits::input_parameter< int >::type patIdLength(patIdLengthSEXP);
    Rcpp::traits::input_parameter< bool >::type addDuration(addDurationSEXP);
    Rcpp::traits::input_parameter< bool >::type durationInWeeks(durationInWeeksSEXP);
    Rcpp::traits::input_parameter< bool >::type durationInMonths(durationInMonthsSEXP);
    rcpp_result_gen = Rcpp::wrap(tSPMPlus(df_dbMart, outputDir, outputFilePrefix, numOfThreads, removeSparseSequences, sparsityValue, createTemporalBuckets, removeSparseTemporalBuckets, patIdLength, addDuration, durationInWeeks, durationInMonths));
    return rcpp_result_gen;
END_RCPP
}
// extractNonSparseSequences
DataFrame extractNonSparseSequences(DataFrame df_dbMart, std::string outputDir, std::string outputFilePrefix, double sparsityValue, int numOfThreads, bool addDuration, bool durationInWeeks, bool durationInMonths);
RcppExport SEXP _tSPMPlusR_extractNonSparseSequences(SEXP df_dbMartSEXP, SEXP outputDirSEXP, SEXP outputFilePrefixSEXP, SEXP sparsityValueSEXP, SEXP numOfThreadsSEXP, SEXP addDurationSEXP, SEXP durationInWeeksSEXP, SEXP durationInMonthsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df_dbMart(df_dbMartSEXP);
    Rcpp::traits::input_parameter< std::string >::type outputDir(outputDirSEXP);
    Rcpp::traits::input_parameter< std::string >::type outputFilePrefix(outputFilePrefixSEXP);
    Rcpp::traits::input_parameter< double >::type sparsityValue(sparsityValueSEXP);
    Rcpp::traits::input_parameter< int >::type numOfThreads(numOfThreadsSEXP);
    Rcpp::traits::input_parameter< bool >::type addDuration(addDurationSEXP);
    Rcpp::traits::input_parameter< bool >::type durationInWeeks(durationInWeeksSEXP);
    Rcpp::traits::input_parameter< bool >::type durationInMonths(durationInMonthsSEXP);
    rcpp_result_gen = Rcpp::wrap(extractNonSparseSequences(df_dbMart, outputDir, outputFilePrefix, sparsityValue, numOfThreads, addDuration, durationInWeeks, durationInMonths));
    return rcpp_result_gen;
END_RCPP
}
// extractAllTransiviteSequences
DataFrame extractAllTransiviteSequences(DataFrame df_dbMart, std::string outputDir, std::string outputFilePrefix, int numOfThreads, bool addDuration, bool durationInWeeks, bool durationInMonths);
RcppExport SEXP _tSPMPlusR_extractAllTransiviteSequences(SEXP df_dbMartSEXP, SEXP outputDirSEXP, SEXP outputFilePrefixSEXP, SEXP numOfThreadsSEXP, SEXP addDurationSEXP, SEXP durationInWeeksSEXP, SEXP durationInMonthsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df_dbMart(df_dbMartSEXP);
    Rcpp::traits::input_parameter< std::string >::type outputDir(outputDirSEXP);
    Rcpp::traits::input_parameter< std::string >::type outputFilePrefix(outputFilePrefixSEXP);
    Rcpp::traits::input_parameter< int >::type numOfThreads(numOfThreadsSEXP);
    Rcpp::traits::input_parameter< bool >::type addDuration(addDurationSEXP);
    Rcpp::traits::input_parameter< bool >::type durationInWeeks(durationInWeeksSEXP);
    Rcpp::traits::input_parameter< bool >::type durationInMonths(durationInMonthsSEXP);
    rcpp_result_gen = Rcpp::wrap(extractAllTransiviteSequences(df_dbMart, outputDir, outputFilePrefix, numOfThreads, addDuration, durationInWeeks, durationInMonths));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tSPMPlusR_createTransitiveSequences", (DL_FUNC) &_tSPMPlusR_createTransitiveSequences, 5},
    {"_tSPMPlusR_tSPMPlus", (DL_FUNC) &_tSPMPlusR_tSPMPlus, 12},
    {"_tSPMPlusR_extractNonSparseSequences", (DL_FUNC) &_tSPMPlusR_extractNonSparseSequences, 8},
    {"_tSPMPlusR_extractAllTransiviteSequences", (DL_FUNC) &_tSPMPlusR_extractAllTransiviteSequences, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_tSPMPlusR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
